{"version":3,"file":"index-4b0dd394.js","sources":["../../../../plugin-media/src/Audio.svelte","../../../../plugin-media/src/index.js","../../../../plugin-media/src/Video.svelte"],"sourcesContent":["<script>\n  export let src\n  export let attrs\n</script>\n\n<audio {...attrs} {src}></audio>\n","import Audio from './Audio.svelte';\nimport Video from './Video.svelte';\nimport AudioIcon from './AudioIcon.svelte';\nimport VideoIcon from './VideoIcon.svelte';\nfunction getClickHandler(type) {\n    return cm => {\n        const pos = cm.getCursor('from');\n        cm.replaceRange(`<${type} src=\"\"></${type}>`, pos);\n        cm.setCursor({ line: pos.line, ch: pos.ch + 12 });\n        cm.focus();\n    };\n}\nexport default function media({ video: { defaultAttrs: videoAttrs = { controls: true }, onClickIcon: onClickVideo = getClickHandler('video'), } = {}, audio: { defaultAttrs: audioAttrs = { controls: true }, onClickIcon: onClickAudio = getClickHandler('audio'), } = {}, } = {}) {\n    return {\n        renderNode(node) {\n            if (node.type !== 'element')\n                return;\n            switch (node.tagName) {\n                case 'video': {\n                    const { src, poster, width, height } = node.properties;\n                    return {\n                        component: Video,\n                        props: { src, poster, width, height, attrs: videoAttrs },\n                    };\n                }\n                case 'audio': {\n                    return {\n                        component: Audio,\n                        props: {\n                            src: node.properties.src,\n                            attrs: audioAttrs,\n                        },\n                    };\n                }\n            }\n        },\n        toolbarItems: [\n            {\n                component: AudioIcon,\n                onClick: onClickAudio,\n            },\n            {\n                component: VideoIcon,\n                onClick: onClickVideo,\n            },\n        ],\n    };\n}\n","<script>\n  export let src\n  export let poster\n  export let width\n  export let height\n  export let attrs\n</script>\n\n<style>\n  video {\n    max-width: 100%;\n  }\n</style>\n\n<video {...attrs} {src} {poster} {width} {height}></video>\n"],"names":["ctx","src","attrs","video","defaultAttrs","videoAttrs","controls","onClickIcon","onClickVideo","getClickHandler","audio","audioAttrs","onClickAudio","[object Object]","node","type","tagName","poster","width","height","properties","component","Video","props","Audio","toolbarItems","AudioIcon","onClick","VideoIcon","cm","pos","getCursor","replaceRange","setCursor","line","ch","focus"],"mappings":"6PAKWA,sIAAAA,0EAJEC,YACAC,+FCUE,UAAiBC,OAASC,aAAcC,EAAa,CAAEC,UAAU,GAAQC,YAAaC,EAAeC,EAAgB,UAAc,GAAIC,OAASN,aAAcO,EAAa,CAAEL,UAAU,GAAQC,YAAaK,EAAeH,EAAgB,UAAc,IAAQ,IAC5Q,MAAO,CACHI,WAAWC,GACP,GAAkB,YAAdA,EAAKC,KAET,OAAQD,EAAKE,SACT,IAAK,QAAS,CACV,MAAMf,IAAEA,EAAGgB,OAAEA,EAAMC,MAAEA,EAAKC,OAAEA,GAAWL,EAAKM,WAC5C,MAAO,CACHC,UAAWC,EACXC,MAAO,CAAEtB,IAAAA,EAAKgB,OAAAA,EAAQC,MAAAA,EAAOC,OAAAA,EAAQjB,MAAOG,IAGpD,IAAK,QACD,MAAO,CACHgB,UAAWG,EACXD,MAAO,CACHtB,IAAKa,EAAKM,WAAWnB,IACrBC,MAAOS,MAM3Bc,aAAc,CACV,CACIJ,UAAWK,EACXC,QAASf,GAEb,CACIS,UAAWO,EACXD,QAASnB,yGC7BdR,wMAAAA,0JAbEC,aACAgB,YACAC,aACAC,YACAjB,iqCDDb,SAASO,EAAgBM,GACrB,OAAOc,IACH,MAAMC,EAAMD,EAAGE,UAAU,QACzBF,EAAGG,aAAa,IAAIjB,cAAiBA,KAASe,GAC9CD,EAAGI,UAAU,CAAEC,KAAMJ,EAAII,KAAMC,GAAIL,EAAIK,GAAK,KAC5CN,EAAGO"}